/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/Riften/goMesaTracer */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 2 "main.go"

#define CGO_START 0
#define CGO_END 1
#define GLM2_DRAW_BEGIN 2
#define GLM2_DRAW_END 3
#define GLM2_STEP_BEGIN 4
#define GLM2_STEP_END 5
#define GLM2_UPDATE_BEGIN 6
#define GLM2_UPDATE_END 7
#define ZINK_DRAW_BEGIN 8
#define ZINK_DRAW_END 9
#define MESA_SET_DRAW_VAO_BEGIN 10
#define MESA_SET_DRAW_VAO_END 11
#define FLUSH_FOR_DRAW_BEGIN 12
#define FLUSH_FOR_DRAW_END 13
#define MESA_DRAW_ARRAYS_BEGIN 14
#define MESA_DRAW_ARRAYS_END 15
#define ST_DRAW_VBO_BEGIN 16
#define ST_DRAW_VBO_END 17
#define ST_PREPARE_DRAW_BEGIN 18
#define ST_PREPARE_DRAW_END 19
#define CSO_DRAW_VBO_BEGIN 20
#define CSO_DRAW_VBO_END 21
#define GLM2_BUILD_RENDER_VBO_BEGIN 22
#define GLM2_BUILD_RENDER_VBO_END 23
#define GLM2_BUILD_RENDER_ARRAY_BEGIN 24
#define GLM2_BUILD_RENDER_ARRAY_END 25
#define GLM2_BUILD_LOAD_PROJECTION_BEGIN 26
#define GLM2_BUILD_LOAD_PROJECTION_END 27
#define GLM2_BUILD_LOAD_NORMAL_BEGIN 28
#define GLM2_BUILD_LOAD_NORMAL_END 29

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void cgoAddTrace(int cgoType);
extern void cgoStopAndWait();

#ifdef __cplusplus
}
#endif
